#!/bin/bash

help_message (){
  echo 'These are some commands to get started with passman
  add   -    adds new password entry
  open  -    show specified password 
  list  -    lists names of  saved passwords
  init  -    initializes password directory if not existent'
  exit 0
}


initialize_pwdir () {
  if [ -n "$(ls -la $HOME/ | grep -o .passwords)" ]
 then
   printf "You have already initialized a password directory.\nIf you want to reinitialize it please delete $HOME/.passwords/ THIS WILL DELETE YOUR PASSWORDS\n"
   exit 1
 else
    if [ -n "$(ls -la $HOME/ | grep -o .gnupg)" ]
    then
        mkdir $HOME/.passwords   
    else
      echo "It seems you do not have a gpg keypair so far. Please generate one with 'gpg --full-gen-key'
      and write down the email you entered. Then run 'passman init <your@gpg.xyz>'"
      exit 0
    fi
 fi
}


add_pass (){
  if [ -n "$(ls -la $HOME/ | grep -o .passwords)" ]
  then
    echo "Enter the password for $1:"
    read -s password
    echo "$password" >> $HOME/.passwords/$1
    email=$(cat $HOME/.passwords/.Ids)
    gpg -e -r $email $HOME/.passwords/$1 && shred -u $HOME/.passwords/$1
  else
    echo "You do not have a password directory initialized"
    echo "Please do so with 'passman init'"
    exit 1
  fi

}

open_pass () {
  if [ -n "$(ls -la $HOME/ | grep -o .passwords)" ] && [ -n "$(ls -la $HOME/.passwords | grep -o $1)" ]
  then
      gpg -d -q $HOME/.passwords/$1.gpg
  else
    echo "You do not have a password directory initialized"
    echo "Please do so with 'passman init'"
    exit 1
  fi
}

if [ $# == 0 ] #print help page if there are no arguments
then
  help_message
  exit 0
fi



if [[ $1 == 'add' ]]
then
    echo "you want to add a new password"
    [ -n "$2" ] && add_pass $2 || echo "Please supply a name for the password."
  
elif [[ $1 == 'init' ]]
then
  if [ -n "$2" ] && [ -n "$(gpg --list-key | grep -w $2)" ]
  then
    initialize_pwdir && echo "$2" > $HOME/.passwords/.Ids && echo "Successfully initialized." && exit 0
  else
    printf "Please enter the email, you entered when you generated the keypair. \nIf you did not generate a gpg keypair please do so with 'gpg --full-gen-key'\n"
    echo $2         
  fi
  
elif [[ $1 == 'list' ]]
then
  ls -l $HOME/.passwords/ | awk  '{print $9}' | awk -F '.' '{print $1}' |tail -n +2   

elif [[ $1 == 'open' ]]
then
  if [ -n "$2"  ]
  then
    open_pass $2
  else
    if [ -n "$(ls -l $HOME/.passwords/ | awk  '{print $9}' | awk -F '.' '{print $1}' |tail -n +2)" ]
    then
      ls -l $HOME/.passwords/ | awk  '{print $9}' | awk -F '.' '{print $1}' |tail -n +2   
    else
      echo "You do not have any passwords stored"
  fi

fi
else
  help_message
fi
